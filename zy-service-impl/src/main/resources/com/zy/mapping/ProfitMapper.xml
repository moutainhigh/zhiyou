<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.ProfitMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.fnc.Profit">
		<id column="id" property="id" />
		<result column="profit_status" property="profitStatus" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="user_id" property="userId" />
		<result column="sn" property="sn" />
		<result column="title" property="title" />
		<result column="currency_type" property="currencyType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="amount" property="amount" />
		<result column="created_time" property="createdTime" />
		<result column="granted_time" property="grantedTime" />
		<result column="profit_type" property="profitType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="ref_id" property="refId" />
		<result column="remark" property="remark" />
	</resultMap>

	<insert id="insert" parameterType="com.zy.entity.fnc.Profit" useGeneratedKeys="true" keyProperty="id">
	  insert into `fnc_profit` (profit_status,user_id,sn,title,currency_type,amount,created_time,granted_time,profit_type,ref_id,remark)
	  values (#{profitStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{userId},#{sn},#{title},#{currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{amount},#{createdTime},#{grantedTime},#{profitType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{refId},#{remark})
	</insert>

	<delete id="delete">
		delete from `fnc_profit` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.fnc.Profit">
		update `fnc_profit`
		<set>
			profit_status = #{profitStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			user_id = #{userId},
			sn = #{sn},
			title = #{title},
			currency_type = #{currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			amount = #{amount},
			created_time = #{createdTime},
			granted_time = #{grantedTime},
			profit_type = #{profitType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			ref_id = #{refId},
			remark = #{remark},
		</set>
		where id = #{id}
	</update>

	<update id="merge">
		update `fnc_profit`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'profitStatus'">profit_status = #{profit.profitStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.Profit$ProfitStatus},</when>
					<when test="field == 'userId'">user_id = #{profit.userId},</when>
					<when test="field == 'sn'">sn = #{profit.sn},</when>
					<when test="field == 'title'">title = #{profit.title},</when>
					<when test="field == 'currencyType'">currency_type = #{profit.currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.CurrencyType},</when>
					<when test="field == 'amount'">amount = #{profit.amount},</when>
					<when test="field == 'createdTime'">created_time = #{profit.createdTime},</when>
					<when test="field == 'grantedTime'">granted_time = #{profit.grantedTime},</when>
					<when test="field == 'profitType'">profit_type = #{profit.profitType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.Profit$ProfitType},</when>
					<when test="field == 'refId'">ref_id = #{profit.refId},</when>
					<when test="field == 'remark'">remark = #{profit.remark},</when>
				</choose>
				</foreach>
			</set>
		where id = #{profit.id}
	</update>

	<select id="findOne" resultMap="baseResultMap" parameterType="long">
		select
		id,profit_status,user_id,sn,title,currency_type,amount,created_time,granted_time,profit_type,ref_id,remark
		from `fnc_profit`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap" parameterType="com.zy.model.query.ProfitQueryModel">
		select
		id,profit_status,user_id,sn,title,currency_type,amount,created_time,granted_time,profit_type,ref_id,remark
		from `fnc_profit`
		<where>
			<if test="createdTimeLT != null">
				 and created_time &lt; #{createdTimeLT}
			</if>
			<if test="userIdIN != null">
				 and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
			<if test="grantedTimeLT != null">
				 and granted_time &lt; #{grantedTimeLT}
			</if>
			<if test="profitTypeEQ != null">
				 and profit_type = #{profitTypeEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="refIdEQ != null">
				 and ref_id = #{refIdEQ}
			</if>
			<if test="userIdEQ != null">
				 and user_id = #{userIdEQ}
			</if>
			<if test="createdTimeGTE != null">
				 and created_time &gt;= #{createdTimeGTE}
			</if>
			<if test="profitTypeIN != null">
				 and profit_type in
				<foreach collection="profitTypeIN" item="item" open="(" separator="," close=")">
				#{item,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
				</foreach>
			</if>
			<if test="grantedTimeGTE != null">
				 and granted_time &gt;= #{grantedTimeGTE}
			</if>
		</where>
		<choose>
			<when test="orderByAndDirection != null">
				order by ${orderByAndDirection}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>

	<select id="count" resultType="_long" parameterType="com.zy.model.query.ProfitQueryModel">
		select count(*) from `fnc_profit`
		<where>
			<if test="createdTimeLT != null">
				 and created_time &lt; #{createdTimeLT}
			</if>
			<if test="userIdIN != null">
				 and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
			<if test="grantedTimeLT != null">
				 and granted_time &lt; #{grantedTimeLT}
			</if>
			<if test="profitTypeEQ != null">
				 and profit_type = #{profitTypeEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="refIdEQ != null">
				 and ref_id = #{refIdEQ}
			</if>
			<if test="userIdEQ != null">
				 and user_id = #{userIdEQ}
			</if>
			<if test="createdTimeGTE != null">
				 and created_time &gt;= #{createdTimeGTE}
			</if>
			<if test="profitTypeIN != null">
				 and profit_type in
				<foreach collection="profitTypeIN" item="item" open="(" separator="," close=")">
				#{item,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
				</foreach>
			</if>
			<if test="grantedTimeGTE != null">
				 and granted_time &gt;= #{grantedTimeGTE}
			</if>
		</where>
	</select>

</mapper>