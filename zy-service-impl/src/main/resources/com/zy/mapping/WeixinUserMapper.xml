<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.WeixinUserMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.usr.WeixinUser">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="open_id" property="openId" />
		<result column="union_id" property="unionId" />
		<result column="avatar" property="avatar" />
		<result column="nickname" property="nickname" />
	</resultMap>

	<insert id="insert" parameterType="com.zy.entity.usr.WeixinUser" useGeneratedKeys="true" keyProperty="id">
	  insert into `usr_weixin_user` (user_id,open_id,union_id,avatar,nickname)
	  values (#{userId},#{openId},#{unionId},#{avatar},#{nickname})
	</insert>

	<delete id="delete">
		delete from `usr_weixin_user` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.usr.WeixinUser">
		update `usr_weixin_user`
		<set>
			user_id = #{userId},
			open_id = #{openId},
			union_id = #{unionId},
			avatar = #{avatar},
			nickname = #{nickname},
		</set>
		where id = #{id}
	</update>

	<update id="merge">
		update `usr_weixin_user`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'userId'">user_id = #{weixinUser.userId},</when>
					<when test="field == 'openId'">open_id = #{weixinUser.openId},</when>
					<when test="field == 'unionId'">union_id = #{weixinUser.unionId},</when>
					<when test="field == 'avatar'">avatar = #{weixinUser.avatar},</when>
					<when test="field == 'nickname'">nickname = #{weixinUser.nickname},</when>
				</choose>
				</foreach>
			</set>
		where id = #{weixinUser.id}
	</update>

	<select id="findOne" resultMap="baseResultMap" parameterType="long">
		select
		id,user_id,open_id,union_id,avatar,nickname
		from `usr_weixin_user`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap" parameterType="com.zy.model.query.WeixinUserQueryModel">
		select
		id,user_id,open_id,union_id,avatar,nickname
		from `usr_weixin_user`
		<where>
			<if test="idIN != null">
				 and id in
				<foreach collection="idIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
			<if test="userIdEQ != null">
				 and user_id = #{userIdEQ}
			</if>
			<if test="openIdEQ != null">
				 and open_id = #{openIdEQ}
			</if>
		</where>
		<choose>
			<when test="orderByAndDirection != null">
				order by ${orderByAndDirection}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>

	<select id="count" resultType="_long" parameterType="com.zy.model.query.WeixinUserQueryModel">
		select count(*) from `usr_weixin_user`
		<where>
			<if test="idIN != null">
				 and id in
				<foreach collection="idIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
			<if test="userIdEQ != null">
				 and user_id = #{userIdEQ}
			</if>
			<if test="openIdEQ != null">
				 and open_id = #{openIdEQ}
			</if>
		</where>
	</select>

	<select id="findByOpenId" resultMap="baseResultMap" parameterType="string">
		select
		 * 
		from `usr_weixin_user`
		where open_id = #{openId}
	</select>

	<select id="findByUserId" resultMap="baseResultMap" parameterType="long">
		select
		 * 
		from `usr_weixin_user`
		where user_id = #{userId}
	</select>

</mapper>