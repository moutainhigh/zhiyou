<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.ArticleMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.cms.Article">
		<id column="id" property="id" />
		<result column="title" property="title" />
		<result column="brief" property="brief" />
		<result column="author" property="author" />
		<result column="released_time" property="releasedTime" />
		<result column="is_released" property="isReleased" />
		<result column="image" property="image" />
		<result column="content" property="content" />
		<result column="created_time" property="createdTime" />
		<result column="visit_count" property="visitCount" />
	</resultMap>

	<insert id="insert" parameterType="com.zy.entity.cms.Article" useGeneratedKeys="true" keyProperty="id">
	  insert into `cms_article` (title,brief,author,released_time,is_released,image,content,created_time,visit_count)
	  values (#{title},#{brief},#{author},#{releasedTime},#{isReleased},#{image},#{content},#{createdTime},#{visitCount})
	</insert>

	<delete id="delete">
		delete from `cms_article` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.cms.Article">
		update `cms_article`
		<set>
			title = #{title},
			brief = #{brief},
			author = #{author},
			released_time = #{releasedTime},
			is_released = #{isReleased},
			image = #{image},
			content = #{content},
			created_time = #{createdTime},
			visit_count = #{visitCount},
		</set>
		where id = #{id}
	</update>

	<update id="merge">
		update `cms_article`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'title'">title = #{article.title},</when>
					<when test="field == 'brief'">brief = #{article.brief},</when>
					<when test="field == 'author'">author = #{article.author},</when>
					<when test="field == 'releasedTime'">released_time = #{article.releasedTime},</when>
					<when test="field == 'isReleased'">is_released = #{article.isReleased},</when>
					<when test="field == 'image'">image = #{article.image},</when>
					<when test="field == 'content'">content = #{article.content},</when>
					<when test="field == 'createdTime'">created_time = #{article.createdTime},</when>
					<when test="field == 'visitCount'">visit_count = #{article.visitCount},</when>
				</choose>
				</foreach>
			</set>
		where id = #{article.id}
	</update>

	<select id="findOne" resultMap="baseResultMap" parameterType="long">
		select
		id,title,brief,author,released_time,is_released,image,content,created_time,visit_count
		from `cms_article`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap" parameterType="com.zy.model.query.ArticleQueryModel">
		select
		id,title,brief,author,released_time,is_released,image,content,created_time,visit_count
		from `cms_article`
		<where>
			<if test="isReleasedEQ != null">
				and is_released = #{isReleasedEQ}
			</if>
		</where>
		<choose>
			<when test="orderByAndDirection != null">
				order by ${orderByAndDirection}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>

	<select id="count" resultType="_long" parameterType="com.zy.model.query.ArticleQueryModel">
		select count(*) from `cms_article`
		<where>
			<if test="isReleasedEQ != null">
				and is_released = #{isReleasedEQ}
			</if>
		</where>
	</select>

	<update id="view">
		update `cms_article`
		set visit_count = visit_count + 1
		where id = #{id}
	</update>

</mapper>