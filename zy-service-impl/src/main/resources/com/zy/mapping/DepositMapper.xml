<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.DepositMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.fnc.Deposit">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="payment_id" property="paymentId" />
		<result column="title" property="title" />
		<result column="sn" property="sn" />
		<result column="currency_type1" property="currencyType1" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="amount1" property="amount1" />
		<result column="currency_type2" property="currencyType2" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="amount2" property="amount2" />
		<result column="total_amount" property="totalAmount" />
		<result column="is_outer_created" property="isOuterCreated" />
		<result column="outer_sn" property="outerSn" />
		<result column="qr_code_url" property="qrCodeUrl" />
		<result column="weixin_open_id" property="weixinOpenId" />
		<result column="pay_type" property="payType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="paid_time" property="paidTime" />
		<result column="created_time" property="createdTime" />
		<result column="expired_time" property="expiredTime" />
		<result column="deposit_status" property="depositStatus" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="version" property="version" />
	</resultMap>

	<insert id="insert" parameterType="com.zy.entity.fnc.Deposit" useGeneratedKeys="true" keyProperty="id">
	  insert into `fnc_deposit` (user_id,payment_id,title,sn,currency_type1,amount1,currency_type2,amount2,total_amount,is_outer_created,outer_sn,qr_code_url,weixin_open_id,pay_type,paid_time,created_time,expired_time,deposit_status,version)
	  values (#{userId},#{paymentId},#{title},#{sn},#{currencyType1,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{amount1},#{currencyType2,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{amount2},#{totalAmount},#{isOuterCreated},#{outerSn},#{qrCodeUrl},#{weixinOpenId},#{payType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{paidTime},#{createdTime},#{expiredTime},#{depositStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{version})
	</insert>

	<delete id="delete">
		delete from `fnc_deposit` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.fnc.Deposit">
		update `fnc_deposit`
		<set>
			user_id = #{userId},
			payment_id = #{paymentId},
			title = #{title},
			sn = #{sn},
			currency_type1 = #{currencyType1,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			amount1 = #{amount1},
			currency_type2 = #{currencyType2,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			amount2 = #{amount2},
			total_amount = #{totalAmount},
			is_outer_created = #{isOuterCreated},
			outer_sn = #{outerSn},
			qr_code_url = #{qrCodeUrl},
			weixin_open_id = #{weixinOpenId},
			pay_type = #{payType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			paid_time = #{paidTime},
			created_time = #{createdTime},
			expired_time = #{expiredTime},
			deposit_status = #{depositStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			version = version + 1,
		</set>
		where id = #{id} and version=#{version}
	</update>

	<update id="merge">
		update `fnc_deposit`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'userId'">user_id = #{deposit.userId},</when>
					<when test="field == 'paymentId'">payment_id = #{deposit.paymentId},</when>
					<when test="field == 'title'">title = #{deposit.title},</when>
					<when test="field == 'sn'">sn = #{deposit.sn},</when>
					<when test="field == 'currencyType1'">currency_type1 = #{deposit.currencyType1,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.CurrencyType},</when>
					<when test="field == 'amount1'">amount1 = #{deposit.amount1},</when>
					<when test="field == 'currencyType2'">currency_type2 = #{deposit.currencyType2,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.CurrencyType},</when>
					<when test="field == 'amount2'">amount2 = #{deposit.amount2},</when>
					<when test="field == 'totalAmount'">total_amount = #{deposit.totalAmount},</when>
					<when test="field == 'isOuterCreated'">is_outer_created = #{deposit.isOuterCreated},</when>
					<when test="field == 'outerSn'">outer_sn = #{deposit.outerSn},</when>
					<when test="field == 'qrCodeUrl'">qr_code_url = #{deposit.qrCodeUrl},</when>
					<when test="field == 'weixinOpenId'">weixin_open_id = #{deposit.weixinOpenId},</when>
					<when test="field == 'payType'">pay_type = #{deposit.payType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.PayType},</when>
					<when test="field == 'paidTime'">paid_time = #{deposit.paidTime},</when>
					<when test="field == 'createdTime'">created_time = #{deposit.createdTime},</when>
					<when test="field == 'expiredTime'">expired_time = #{deposit.expiredTime},</when>
					<when test="field == 'depositStatus'">deposit_status = #{deposit.depositStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.Deposit$DepositStatus},</when>
				</choose>
				</foreach>
			</set>
		where id = #{deposit.id}
	</update>

	<select id="findOne" resultMap="baseResultMap" parameterType="long">
		select
		id,user_id,payment_id,title,sn,currency_type1,amount1,currency_type2,amount2,total_amount,is_outer_created,outer_sn,qr_code_url,weixin_open_id,pay_type,paid_time,created_time,expired_time,deposit_status,version
		from `fnc_deposit`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap" parameterType="com.zy.model.query.DepositQueryModel">
		select
		id,user_id,payment_id,title,sn,currency_type1,amount1,currency_type2,amount2,total_amount,is_outer_created,outer_sn,qr_code_url,weixin_open_id,pay_type,paid_time,created_time,expired_time,deposit_status,version
		from `fnc_deposit`
		<where>
			<if test="userIdIN != null">
				 and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
			<if test="payTypeEQ != null">
				 and pay_type = #{payTypeEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="userIdEQ != null">
				 and user_id = #{userIdEQ}
			</if>
			<if test="paidTimeLT != null">
				 and paid_time &lt; #{paidTimeLT}
			</if>
			<if test="depositStatusEQ != null">
				 and deposit_status = #{depositStatusEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="paidTimeGTE != null">
				 and paid_time &gt;= #{paidTimeGTE}
			</if>
		</where>
		<choose>
			<when test="orderByAndDirection != null">
				order by ${orderByAndDirection}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>

	<select id="count" resultType="_long" parameterType="com.zy.model.query.DepositQueryModel">
		select count(*) from `fnc_deposit`
		<where>
			<if test="userIdIN != null">
				 and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
			<if test="payTypeEQ != null">
				 and pay_type = #{payTypeEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="userIdEQ != null">
				 and user_id = #{userIdEQ}
			</if>
			<if test="paidTimeLT != null">
				 and paid_time &lt; #{paidTimeLT}
			</if>
			<if test="depositStatusEQ != null">
				 and deposit_status = #{depositStatusEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="paidTimeGTE != null">
				 and paid_time &gt;= #{paidTimeGTE}
			</if>
		</where>
	</select>

	<select id="findBySn" resultMap="baseResultMap" parameterType="string">
		select
		*
		from `fnc_deposit`
		where sn = #{sn}
	</select>

</mapper>