<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.AccountLogMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.fnc.AccountLog">
		<id column="id" property="id" />
		<result column="in_out" property="inOut" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="title" property="title" />
		<result column="user_id" property="userId" />
		<result column="ref_user_id" property="refUserId" />
		<result column="account_log_type" property="accountLogType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="ref_id" property="refId" />
		<result column="ref_sn" property="refSn" />
		<result column="currency_type" property="currencyType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="trans_time" property="transTime" />
		<result column="before_amount" property="beforeAmount" />
		<result column="trans_amount" property="transAmount" />
		<result column="after_amount" property="afterAmount" />
		<result column="is_acknowledged" property="isAcknowledged" />
	</resultMap>

	<insert id="insert" parameterType="com.zy.entity.fnc.AccountLog" useGeneratedKeys="true" keyProperty="id">
	  insert into `fnc_account_log` (in_out,title,user_id,ref_user_id,account_log_type,ref_id,ref_sn,currency_type,trans_time,before_amount,trans_amount,after_amount,is_acknowledged)
	  values (#{inOut,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{title},#{userId},#{refUserId},#{accountLogType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{refId},#{refSn},#{currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{transTime},#{beforeAmount},#{transAmount},#{afterAmount},#{isAcknowledged})
	</insert>

	<delete id="delete">
		delete from `fnc_account_log` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.fnc.AccountLog">
		update `fnc_account_log`
		<set>
			in_out = #{inOut,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			title = #{title},
			user_id = #{userId},
			ref_user_id = #{refUserId},
			account_log_type = #{accountLogType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			ref_id = #{refId},
			ref_sn = #{refSn},
			currency_type = #{currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			trans_time = #{transTime},
			before_amount = #{beforeAmount},
			trans_amount = #{transAmount},
			after_amount = #{afterAmount},
			is_acknowledged = #{isAcknowledged},
		</set>
		where id = #{id}
	</update>

	<update id="merge">
		update `fnc_account_log`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'inOut'">in_out = #{accountLog.inOut,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.AccountLog$InOut},</when>
					<when test="field == 'title'">title = #{accountLog.title},</when>
					<when test="field == 'userId'">user_id = #{accountLog.userId},</when>
					<when test="field == 'refUserId'">ref_user_id = #{accountLog.refUserId},</when>
					<when test="field == 'accountLogType'">account_log_type = #{accountLog.accountLogType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.AccountLog$AccountLogType},</when>
					<when test="field == 'refId'">ref_id = #{accountLog.refId},</when>
					<when test="field == 'refSn'">ref_sn = #{accountLog.refSn},</when>
					<when test="field == 'currencyType'">currency_type = #{accountLog.currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.CurrencyType},</when>
					<when test="field == 'transTime'">trans_time = #{accountLog.transTime},</when>
					<when test="field == 'beforeAmount'">before_amount = #{accountLog.beforeAmount},</when>
					<when test="field == 'transAmount'">trans_amount = #{accountLog.transAmount},</when>
					<when test="field == 'afterAmount'">after_amount = #{accountLog.afterAmount},</when>
					<when test="field == 'isAcknowledged'">is_acknowledged = #{accountLog.isAcknowledged},</when>
				</choose>
				</foreach>
			</set>
		where id = #{accountLog.id}
	</update>

	<select id="findOne" resultMap="baseResultMap" parameterType="long">
		select
		id,in_out,title,user_id,ref_user_id,account_log_type,ref_id,ref_sn,currency_type,trans_time,before_amount,trans_amount,after_amount,is_acknowledged
		from `fnc_account_log`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap" parameterType="com.zy.model.query.AccountLogQueryModel">
		select
		id,in_out,title,user_id,ref_user_id,account_log_type,ref_id,ref_sn,currency_type,trans_time,before_amount,trans_amount,after_amount,is_acknowledged
		from `fnc_account_log`
		<where>
			<if test="currencyTypeEQ != null">
				and currency_type = #{currencyTypeEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="titleLK != null">
				<bind name="titleLK" value="'%' + titleLK + '%'"/> and title like #{titleLK}
			</if>
			<if test="transTimeGTE != null">
				and trans_time &gt;= #{transTimeGTE}
			</if>
			<if test="inOutEQ != null">
				and in_out = #{inOutEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="accountLogTypeIN != null">
				<if test="accountLogTypeIN.length != 0">
				and user_id in
				<foreach collection="accountLogTypeIN" item="item" open="(" separator="," close=")">
				#{item,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
				</foreach>
				</if>
				<if test="accountLogTypeIN.length == 0">
				1 = 2
				</if>
			</if>
			<if test="userIdEQ != null">
				and user_id = #{userIdEQ}
			</if>
			<if test="accountLogTypeIN != null">
				<if test="accountLogTypeIN.length != 0">
				and account_log_type in
				<foreach collection="accountLogTypeIN" item="item" open="(" separator="," close=")">
				#{item,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
				</foreach>
				</if>
				<if test="accountLogTypeIN.length == 0">
				1 = 2
				</if>
			</if>
			<if test="refUserIdEQ != null">
				and ref_user_id = #{refUserIdEQ}
			</if>
			<if test="userIdIN != null">
				<if test="userIdIN.length != 0">
				and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="userIdIN.length == 0">
				1 = 2
				</if>
			</if>
			<if test="refUserIdIN != null">
				<if test="refUserIdIN.length != 0">
				and ref_user_id in
				<foreach collection="refUserIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="refUserIdIN.length == 0">
				1 = 2
				</if>
			</if>
			<if test="refSnEQ != null">
				and ref_sn = #{refSnEQ}
			</if>
			<if test="transTimeLT != null">
				and trans_time &lt; #{transTimeLT}
			</if>
			<if test="isAcknowledgedEQ != null">
				and is_acknowledged = #{isAcknowledgedEQ}
			</if>
		</where>
		<choose>
			<when test="orderByAndDirection != null">
				order by ${orderByAndDirection}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>

	<select id="count" resultType="_long" parameterType="com.zy.model.query.AccountLogQueryModel">
		select count(*) from `fnc_account_log`
		<where>
			<if test="currencyTypeEQ != null">
				and currency_type = #{currencyTypeEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="titleLK != null">
				<bind name="titleLK" value="'%' + titleLK + '%'"/> and title like #{titleLK}
			</if>
			<if test="transTimeGTE != null">
				and trans_time &gt;= #{transTimeGTE}
			</if>
			<if test="inOutEQ != null">
				and in_out = #{inOutEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="accountLogTypeIN != null">
				<if test="accountLogTypeIN != 0">
				and account_log_type in
				<foreach collection="accountLogTypeIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="accountLogTypeIN.length == 0">
				1 = 2
				</if>
			</if>
			<if test="userIdEQ != null">
				and user_id = #{userIdEQ}
			</if>
			<if test="accountLogTypeIN != null">
				<if test="accountLogTypeIN.length != 0">
				and account_log_type in
				<foreach collection="accountLogTypeIN" item="item" open="(" separator="," close=")">
				#{item,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
				</foreach>
				</if>
				<if test="accountLogTypeIN.length == 0">
				1 = 2
				</if>
			</if>
			<if test="refUserIdEQ != null">
				and ref_user_id = #{refUserIdEQ}
			</if>
			<if test="userIdIN != null">
				<if test="userIdIN.length != 0">
				and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="userIdIN.length == 0">
				1 = 2
				</if>
			</if>
			<if test="refUserIdIN != null">
				<if test="refUserIdIN.length != 0">
				and ref_user_id in
				<foreach collection="refUserIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="refUserIdIN.length == 0">
				1 = 2
				</if>
			</if>
			<if test="refSnEQ != null">
				and ref_sn = #{refSnEQ}
			</if>
			<if test="transTimeLT != null">
				and trans_time &lt; #{transTimeLT}
			</if>
			<if test="isAcknowledgedEQ != null">
				and is_acknowledged = #{isAcknowledgedEQ}
			</if>
		</where>
	</select>

</mapper>