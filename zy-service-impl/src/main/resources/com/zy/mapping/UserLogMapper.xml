<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.UserLogMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.usr.UserLog">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="operation" property="operation" />
		<result column="operator_id" property="operatorId" />
		<result column="operated_time" property="operatedTime" />
		<result column="remark" property="remark" />
	</resultMap>

	<sql id="baseColumn">id,user_id,operation,operator_id,operated_time,remark</sql>

	<insert id="insert" parameterType="com.zy.entity.usr.UserLog" useGeneratedKeys="true" keyProperty="id">
	  insert into `usr_user_log` (user_id,operation,operator_id,operated_time,remark)
	  values (#{userId},#{operation},#{operatorId},#{operatedTime},#{remark})
	</insert>

	<delete id="delete">
		delete from `usr_user_log` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.usr.UserLog">
		update `usr_user_log`
		<set>
			user_id = #{userId},
			operation = #{operation},
			operator_id = #{operatorId},
			operated_time = #{operatedTime},
			remark = #{remark},
		</set>
		where id = #{id}
	</update>

	<update id="merge">
		update `usr_user_log`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'userId'">user_id = #{userLog.userId},</when>
					<when test="field == 'operation'">operation = #{userLog.operation},</when>
					<when test="field == 'operatorId'">operator_id = #{userLog.operatorId},</when>
					<when test="field == 'operatedTime'">operated_time = #{userLog.operatedTime},</when>
					<when test="field == 'remark'">remark = #{userLog.remark},</when>
				</choose>
				</foreach>
			</set>
		where id = #{userLog.id}
	</update>

	<select id="findOne" resultMap="baseResultMap" parameterType="long">
		select
		<include refid="baseColumn"/>
		from `usr_user_log`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap">
		select
		<include refid="baseColumn"/>
		from `usr_user_log`
		order by id desc
	</select>

	<select id="count" resultType="_long">
		select count(*) FROM `usr_user_log` where remark lik #{remark} and operated_Time &gt;=#{operatedTimeBegin} and operated_Time &lt;=#{operatedTimeEnd}
	</select>

	<resultMap id="countResultMap" type="com.zy.model.dto.UserTeamCountDto">
		<result column="userRankEQ" property="userRankEQ" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="countNum" property="countNum"/>
	</resultMap>
	<select id="counyGByRank" resultType="countResultMap">
		SELECT u.user_rank userRankEQ,count(*) countNum from 	usr_user_log l,usr_user u WHERE
	      l.user_id = u.id
	      AND remark lik #{remark}
	      and operated_Time &gt;=#{operatedTimeBegin}
	      and operated_Time &lt;=#{operatedTimeEnd}
	      AND u.parent_id =#{parentid}
	      GROUP BY u.user_rank
	</select>

	<resultMap id="rankResultMap" type="com.zy.model.dto.UserTeamDto">
		<result column="userId" property="userId"/>
		<result column="num" property="num"/>
		<result column="nickname" property="nickname"/>
		<result column="avatar" property="avatar"/>
		<result column="phone" property="phone"/>
	</resultMap>
	<select id="findByRank" resultType="rankResultMap" parameterType="com.zy.model.query.UserlongQueryModel">
	  SELECT a.parent_id userId, a.num num,b.nickname,b.avatar,b.phone from
		   (SELECT count(*) num,u.parent_id FROM
			 usr_user_log l,
			 usr_user u
		    WHERE
			 l.user_id = u.id AND parent_id is NOT null
			 <if test="remark !=null">
		       AND l.remark LIKE #{remark}
			 </if>
		     <if test="registerTimeGTE !=null">
				 and operated_Time &gt;=#{operatedTimeBegin}
			 </if>
		     <if test="registerTimeLT !=null">
				 and operated_Time &lt;=#{operatedTimeEnd}
			 </if>
		     GROUP BY u.parent_id )a,
	         usr_user b where a.parent_id =b.id order by num;
		    <if test="offset != null">
			   limit #{offset}, #{pageSize}
		    </if>
	</select>

	<select id="countByRank" resultType="_long" parameterType="com.zy.model.query.UserlongQueryModel">
		SELECT count(*)  from
		(SELECT count(*) num,u.parent_id FROM
		usr_user_log l,
		usr_user u
		WHERE
		l.user_id = u.id AND parent_id is NOT null
		<if test="remark !=null">
			AND l.remark LIKE #{remark}
		</if>
		<if test="registerTimeGTE !=null">
			and operated_Time &gt;=#{operatedTimeBegin}
		</if>
		<if test="registerTimeLT !=null">
			and operated_Time &lt;=#{operatedTimeEnd}
		</if>
		GROUP BY u.parent_id )a,
	</select>
</mapper>