<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.WithdrawMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.fnc.Withdraw">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="currency_type" property="currencyType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="title" property="title" />
		<result column="sn" property="sn" />
		<result column="amount" property="amount" />
		<result column="fee_rate" property="feeRate" />
		<result column="fee" property="fee" />
		<result column="real_amount" property="realAmount" />
		<result column="outer_fee" property="outerFee" />
		<result column="created_time" property="createdTime" />
		<result column="withdrawed_time" property="withdrawedTime" />
		<result column="withdraw_status" property="withdrawStatus" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="operator_id" property="operatorId" />
		<result column="is_to_bank_card" property="isToBankCard" />
		<result column="bank_card_id" property="bankCardId" />
		<result column="open_id" property="openId" />
		<result column="remark" property="remark" />
		<result column="version" property="version" />
	</resultMap>

	<insert id="insert" parameterType="com.zy.entity.fnc.Withdraw" useGeneratedKeys="true" keyProperty="id">
	  insert into `fnc_withdraw` (user_id,currency_type,title,sn,amount,fee_rate,fee,real_amount,outer_fee,created_time,withdrawed_time,withdraw_status,operator_id,is_to_bank_card,bank_card_id,open_id,remark,version)
	  values (#{userId},#{currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{title},#{sn},#{amount},#{feeRate},#{fee},#{realAmount},#{outerFee},#{createdTime},#{withdrawedTime},#{withdrawStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{operatorId},#{isToBankCard},#{bankCardId},#{openId},#{remark},#{version})
	</insert>

	<delete id="delete">
		delete from `fnc_withdraw` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.fnc.Withdraw">
		update `fnc_withdraw`
		<set>
			user_id = #{userId},
			currency_type = #{currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			title = #{title},
			sn = #{sn},
			amount = #{amount},
			fee_rate = #{feeRate},
			fee = #{fee},
			real_amount = #{realAmount},
			outer_fee = #{outerFee},
			created_time = #{createdTime},
			withdrawed_time = #{withdrawedTime},
			withdraw_status = #{withdrawStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			operator_id = #{operatorId},
			is_to_bank_card = #{isToBankCard},
			bank_card_id = #{bankCardId},
			open_id = #{openId},
			remark = #{remark},
			version = version + 1,
		</set>
		where id = #{id} and version=#{version}
	</update>

	<update id="merge">
		update `fnc_withdraw`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'userId'">user_id = #{withdraw.userId},</when>
					<when test="field == 'currencyType'">currency_type = #{withdraw.currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.CurrencyType},</when>
					<when test="field == 'title'">title = #{withdraw.title},</when>
					<when test="field == 'sn'">sn = #{withdraw.sn},</when>
					<when test="field == 'amount'">amount = #{withdraw.amount},</when>
					<when test="field == 'feeRate'">fee_rate = #{withdraw.feeRate},</when>
					<when test="field == 'fee'">fee = #{withdraw.fee},</when>
					<when test="field == 'realAmount'">real_amount = #{withdraw.realAmount},</when>
					<when test="field == 'outerFee'">outer_fee = #{withdraw.outerFee},</when>
					<when test="field == 'createdTime'">created_time = #{withdraw.createdTime},</when>
					<when test="field == 'withdrawedTime'">withdrawed_time = #{withdraw.withdrawedTime},</when>
					<when test="field == 'withdrawStatus'">withdraw_status = #{withdraw.withdrawStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.Withdraw$WithdrawStatus},</when>
					<when test="field == 'operatorId'">operator_id = #{withdraw.operatorId},</when>
					<when test="field == 'isToBankCard'">is_to_bank_card = #{withdraw.isToBankCard},</when>
					<when test="field == 'bankCardId'">bank_card_id = #{withdraw.bankCardId},</when>
					<when test="field == 'openId'">open_id = #{withdraw.openId},</when>
					<when test="field == 'remark'">remark = #{withdraw.remark},</when>
				</choose>
				</foreach>
			</set>
		where id = #{withdraw.id}
	</update>

	<select id="findOne" resultMap="baseResultMap" parameterType="long">
		select
		id,user_id,currency_type,title,sn,amount,fee_rate,fee,real_amount,outer_fee,created_time,withdrawed_time,withdraw_status,operator_id,is_to_bank_card,bank_card_id,open_id,remark,version
		from `fnc_withdraw`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap" parameterType="com.zy.model.query.WithdrawQueryModel">
		select
		id,user_id,currency_type,title,sn,amount,fee_rate,fee,real_amount,outer_fee,created_time,withdrawed_time,withdraw_status,operator_id,is_to_bank_card,bank_card_id,open_id,remark,version
		from `fnc_withdraw`
		<where>
			<if test="withdrawStatusEQ != null">
				and withdraw_status = #{withdrawStatusEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="userIdEQ != null">
				and user_id = #{userIdEQ}
			</if>
			<if test="userIdIN != null">
				<if test="userIdIN.length != 0">
				and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="userIdIN.length == 0">
				1 = 2
				</if>
			</if>
		</where>
		<choose>
			<when test="orderByAndDirection != null">
				order by ${orderByAndDirection}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>

	<select id="count" resultType="_long" parameterType="com.zy.model.query.WithdrawQueryModel">
		select count(*) from `fnc_withdraw`
		<where>
			<if test="withdrawStatusEQ != null">
				and withdraw_status = #{withdrawStatusEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="userIdEQ != null">
				and user_id = #{userIdEQ}
			</if>
			<if test="userIdIN != null">
				<if test="userIdIN.length != 0">
				and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="userIdIN.length == 0">
				1 = 2
				</if>
			</if>
		</where>
	</select>

</mapper>