<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.SettingMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.sys.Setting">
		<id column="id" property="id" />
		<result column="sys_user_id" property="sysUserId" />
		<result column="withdraw_fee_rate_script" property="withdrawFeeRateScript" />
		<result column="is_dev" property="isDev" />
		<result column="is_withdraw_on" property="isWithdrawOn" />
		<result column="is_open_order_fill" property="isOpenOrderFill" />
		<result column="order_fill_time" property="orderFillTime" />
	</resultMap>

	<sql id="baseColumn">id,sys_user_id,withdraw_fee_rate_script,is_dev,is_withdraw_on,is_open_order_fill,order_fill_time</sql>

	<insert id="insert" parameterType="com.zy.entity.sys.Setting" useGeneratedKeys="true" keyProperty="id">
	  insert into `sys_setting` (sys_user_id,withdraw_fee_rate_script,is_dev,is_withdraw_on,is_open_order_fill,order_fill_time)
	  values (#{sysUserId},#{withdrawFeeRateScript},#{isDev},#{isWithdrawOn},#{isOpenOrderFill},#{orderFillTime})
	</insert>

	<delete id="delete">
		delete from `sys_setting` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.sys.Setting">
		update `sys_setting`
		<set>
			sys_user_id = #{sysUserId},
			withdraw_fee_rate_script = #{withdrawFeeRateScript},
			is_dev = #{isDev},
			is_withdraw_on = #{isWithdrawOn},
			is_open_order_fill = #{isOpenOrderFill},
			order_fill_time = #{orderFillTime},
		</set>
		where id = #{id}
	</update>

	<update id="merge">
		update `sys_setting`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'sysUserId'">sys_user_id = #{setting.sysUserId},</when>
					<when test="field == 'withdrawFeeRateScript'">withdraw_fee_rate_script = #{setting.withdrawFeeRateScript},</when>
					<when test="field == 'isDev'">is_dev = #{setting.isDev},</when>
					<when test="field == 'isWithdrawOn'">is_withdraw_on = #{setting.isWithdrawOn},</when>
					<when test="field == 'isOpenOrderFill'">is_open_order_fill = #{setting.isOpenOrderFill},</when>
					<when test="field == 'orderFillTime'">order_fill_time = #{setting.orderFillTime},</when>
				</choose>
				</foreach>
			</set>
		where id = #{setting.id}
	</update>

	<select id="findOne" resultMap="baseResultMap" parameterType="long">
		select
		<include refid="baseColumn"/>
		from `sys_setting`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap">
		select
		<include refid="baseColumn"/>
		from `sys_setting`
		order by id desc
	</select>

</mapper>