<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.MergeUserMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.mergeusr.MergeUser">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="inviter_id" property="inviterId" />
		<result column="parent_id" property="parentId" />
		<result column="user_rank" property="userRank" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="product_type" property="productType" />
		<result column="last_upgraded_time" property="lastUpgradedTime" />
		<result column="register_time" property="registerTime" />
		<result column="is_frozen" property="isFrozen" />
		<result column="is_director" property="isDirector" />
		<result column="is_honor_director" property="isHonorDirector" />
		<result column="is_deleted" property="isDeleted" />
		<result column="is_to_v4" property="isToV4" />
		<result column="v4_id" property="v4Id" />
		<result column="code" property="code" />
		<result column="is_shareholder" property="isShareholder" />
		<result column="largearea" property="largearea" />
		<result column="setlargearearemark" property="setlargearearemark" />
		<result column="is_president" property="isPresident" />
		<result column="president_id" property="presidentId" />
		<result column="largearea_director" property="largeareaDirector" />
	</resultMap>

	<sql id="baseColumn">id,user_id,inviter_id,parent_id,user_rank,product_type,last_upgraded_time,register_time,is_frozen,is_director,is_honor_director,is_deleted,is_to_v4,v4_id,code,is_shareholder,largearea,setlargearearemark,is_president,president_id,largearea_director</sql>

	<insert id="insert" parameterType="com.zy.entity.mergeusr.MergeUser" useGeneratedKeys="true" keyProperty="id">
	  insert into `usr_merge_user` (user_id,inviter_id,parent_id,user_rank,product_type,last_upgraded_time,register_time,is_frozen,is_director,is_honor_director,is_deleted,is_to_v4,v4_id,code,is_shareholder,largearea,setlargearearemark,is_president,president_id,largearea_director)
	  values (#{userId},#{inviterId},#{parentId},#{userRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{productType},#{lastUpgradedTime},#{registerTime},#{isFrozen},#{isDirector},#{isHonorDirector},#{isDeleted},#{isToV4},#{v4Id},#{code},#{isShareholder},#{largearea},#{setlargearearemark},#{isPresident},#{presidentId},#{largeareaDirector})
	</insert>

	<!--<delete id="delete">-->
		<!--delete from `usr_merge_user` where id = #{id} and product_type = #{productType}-->
	<!--</delete>-->

	<update id="update" parameterType="com.zy.entity.mergeusr.MergeUser">
		update `usr_merge_user`
		<set>
			user_id = #{userId},
			inviter_id = #{inviterId},
			parent_id = #{parentId},
			user_rank = #{userRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			product_type = #{productType},
			last_upgraded_time = #{lastUpgradedTime},
			register_time = #{registerTime},
			is_frozen = #{isFrozen},
			is_director = #{isDirector},
			is_honor_director = #{isHonorDirector},
			is_deleted = #{isDeleted},
			is_to_v4 = #{isToV4},
			v4_id = #{v4Id},
			code = #{code},
			is_shareholder = #{isShareholder},
			largearea = #{largearea},
			setlargearearemark = #{setlargearearemark},
			is_president = #{isPresident},
			president_id = #{presidentId},
			largearea_director = #{largeareaDirector},
		</set>
		where id = #{id} and product_type = #{productType}
	</update>

	<update id="merge">
		update `usr_merge_user`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'userId'">user_id = #{mergeUser.userId},</when>
					<when test="field == 'inviterId'">inviter_id = #{mergeUser.inviterId},</when>
					<when test="field == 'parentId'">parent_id = #{mergeUser.parentId},</when>
					<when test="field == 'userRank'">user_rank = #{mergeUser.userRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.usr.User$UserRank},</when>
					<when test="field == 'lastUpgradedTime'">last_upgraded_time = #{mergeUser.lastUpgradedTime},</when>
					<when test="field == 'registerTime'">register_time = #{mergeUser.registerTime},</when>
					<when test="field == 'isFrozen'">is_frozen = #{mergeUser.isFrozen},</when>
					<when test="field == 'isDirector'">is_director = #{mergeUser.isDirector},</when>
					<when test="field == 'isHonorDirector'">is_honor_director = #{mergeUser.isHonorDirector},</when>
					<when test="field == 'isDeleted'">is_deleted = #{mergeUser.isDeleted},</when>
					<when test="field == 'isToV4'">is_to_v4 = #{mergeUser.isToV4},</when>
					<when test="field == 'v4Id'">v4_id = #{mergeUser.v4Id},</when>
					<when test="field == 'code'">code = #{mergeUser.code},</when>
					<when test="field == 'isShareholder'">is_shareholder = #{mergeUser.isShareholder},</when>
					<when test="field == 'largearea'">largearea = #{mergeUser.largearea},</when>
					<when test="field == 'setlargearearemark'">setlargearearemark = #{mergeUser.setlargearearemark},</when>
					<when test="field == 'isPresident'">is_president = #{mergeUser.isPresident},</when>
					<when test="field == 'presidentId'">president_id = #{mergeUser.presidentId},</when>
					<when test="field == 'largeareaDirector'">largearea_director = #{mergeUser.largeareaDirector},</when>
				</choose>
				</foreach>
			</set>
		where id = #{mergeUser.id} and product_type = #{mergeUser.productType}
	</update>

	<!--<select id="findOne" resultMap="baseResultMap">-->
		<!--select-->
		<!--<include refid="baseColumn"/>-->
		<!--from `usr_merge_user`-->
		<!--where id = #{id}-->
	<!--</select>-->

	<select id="findAll" resultMap="baseResultMap" parameterType="com.zy.model.query.MergeUserQueryModel">
		select
		<include refid="baseColumn"/>
		from `usr_merge_user`
		<where>
			<if test="userRankEQ != null">
				and user_rank = #{userRankEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="isDeletedEQ != null">
				and is_deleted = #{isDeletedEQ}
			</if>
			<if test="isShareholderEQ != null">
				and is_shareholder = #{isShareholderEQ}
			</if>
			<if test="largeareaDirectorEQ != null">
				and largearea_director = #{largeareaDirectorEQ}
			</if>
			<if test="v4IdIN != null">
				<if test="v4IdIN.length != 0">
				and v4_id in
				<foreach collection="v4IdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="v4IdIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="inviterIdEQ != null">
				and inviter_id = #{inviterIdEQ}
			</if>
			<if test="largeareaEQ != null">
				and largearea = #{largeareaEQ}
			</if>
			<if test="userIdEQ != null">
				and user_id = #{userIdEQ}
			</if>
			<if test="isHonorDirectorEQ != null">
				and is_honor_director = #{isHonorDirectorEQ}
			</if>
			<if test="isDirectorEQ != null">
				and is_director = #{isDirectorEQ}
			</if>
			<if test="isToV4EQ != null">
				and is_to_v4 = #{isToV4EQ}
			</if>
			<if test="parentIdIN != null">
				<if test="parentIdIN.length != 0">
				and parent_id in
				<foreach collection="parentIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="parentIdIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="isFrozenEQ != null">
				and is_frozen = #{isFrozenEQ}
			</if>
			<if test="idIN != null">
				<if test="idIN.length != 0">
				and id in
				<foreach collection="idIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="idIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="registerTimeGTE != null">
				and register_time &gt;= #{registerTimeGTE}
			</if>
			<if test="userIdIN != null">
				<if test="userIdIN.length != 0">
				and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="userIdIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="registerTimeLT != null">
				and register_time &lt; #{registerTimeLT}
			</if>
			<if test="parentIdEQ != null">
				and parent_id = #{parentIdEQ}
			</if>
			<if test="isPresidentEQ != null">
				and is_president = #{isPresidentEQ}
			</if>
			<if test="presidentIdEQ != null">
				and president_id = #{presidentIdEQ}
			</if>
			<if test="inviterIdIN != null">
				<if test="inviterIdIN.length != 0">
				and inviter_id in
				<foreach collection="inviterIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="inviterIdIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="v4IdEQ != null">
				and v4_id = #{v4IdEQ}
			</if>
			<if test="productTypeEQ != null">
				and product_type = #{productTypeEQ}
			</if>
		</where>
		<choose>
			<when test="orderByAndDirection != null">
				order by ${orderByAndDirection}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>

	<select id="count" resultType="_long" parameterType="com.zy.model.query.MergeUserQueryModel">
		select count(*) from `usr_merge_user`
		<where>
			<if test="userRankEQ != null">
				and user_rank = #{userRankEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="isDeletedEQ != null">
				and is_deleted = #{isDeletedEQ}
			</if>
			<if test="isShareholderEQ != null">
				and is_shareholder = #{isShareholderEQ}
			</if>
			<if test="largeareaDirectorEQ != null">
				and largearea_director = #{largeareaDirectorEQ}
			</if>
			<if test="v4IdIN != null">
				<if test="v4IdIN.length != 0">
				and v4_id in
				<foreach collection="v4IdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="v4IdIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="inviterIdEQ != null">
				and inviter_id = #{inviterIdEQ}
			</if>
			<if test="largeareaEQ != null">
				and largearea = #{largeareaEQ}
			</if>
			<if test="userIdEQ != null">
				and user_id = #{userIdEQ}
			</if>
			<if test="isHonorDirectorEQ != null">
				and is_honor_director = #{isHonorDirectorEQ}
			</if>
			<if test="isDirectorEQ != null">
				and is_director = #{isDirectorEQ}
			</if>
			<if test="isToV4EQ != null">
				and is_to_v4 = #{isToV4EQ}
			</if>
			<if test="parentIdIN != null">
				<if test="parentIdIN.length != 0">
				and parent_id in
				<foreach collection="parentIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="parentIdIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="isFrozenEQ != null">
				and is_frozen = #{isFrozenEQ}
			</if>
			<if test="idIN != null">
				<if test="idIN.length != 0">
				and id in
				<foreach collection="idIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="idIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="registerTimeGTE != null">
				and register_time &gt;= #{registerTimeGTE}
			</if>
			<if test="userIdIN != null">
				<if test="userIdIN.length != 0">
				and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="userIdIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="registerTimeLT != null">
				and register_time &lt; #{registerTimeLT}
			</if>
			<if test="parentIdEQ != null">
				and parent_id = #{parentIdEQ}
			</if>
			<if test="isPresidentEQ != null">
				and is_president = #{isPresidentEQ}
			</if>
			<if test="presidentIdEQ != null">
				and president_id = #{presidentIdEQ}
			</if>
			<if test="inviterIdIN != null">
				<if test="inviterIdIN.length != 0">
				and inviter_id in
				<foreach collection="inviterIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="inviterIdIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="v4IdEQ != null">
				and v4_id = #{v4IdEQ}
			</if>
			<if test="productTypeEQ != null">
				and product_type = #{productTypeEQ}
			</if>
		</where>
	</select>

	<select id="findByUserIdAndProductType" resultMap="baseResultMap">
		select
		*
		from `usr_merge_user`
		where user_id = #{userId} and product_type = #{productType}
	</select>
	<select id="findBycodeAndProductType" resultMap="baseResultMap">
		select
		*
		from `usr_merge_user`
		where code = #{code} and product_type = #{productType}
	</select>

	<resultMap id="countResultMap" type="com.zy.model.dto.UserTeamCountDto">
		<result column="userRankEQ" property="userRankEQ" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler"/>
		<result column="totalnumber" property="totalnumber"/>
	</resultMap>

	<select id="countByUserId" resultMap="countResultMap">
		select user_rank userRankEQ,COUNT(*) totalnumber FROM `usr_merge_user` where parent_id = #{parentId}  and product_type = #{productType} GROUP BY user_rank
	</select>



</mapper>