<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.MergeUserUpgradeMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.mergeusr.MergeUserUpgrade">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="from_user_rank" property="fromUserRank" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="to_user_rank" property="toUserRank" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="upgraded_time" property="upgradedTime" />
	</resultMap>

	<sql id="baseColumn">id,user_id,from_user_rank,to_user_rank,upgraded_time</sql>

	<insert id="insert" parameterType="com.zy.entity.mergeusr.MergeUserUpgrade" useGeneratedKeys="true" keyProperty="id">
	  insert into `usr_merge_user_upgrade` (user_id,from_user_rank,to_user_rank,upgraded_time)
	  values (#{userId},#{fromUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{toUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{upgradedTime})
	</insert>

	<delete id="delete">
		delete from `usr_merge_user_upgrade` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.mergeusr.MergeUserUpgrade">
		update `usr_merge_user_upgrade`
		<set>
			user_id = #{userId},
			from_user_rank = #{fromUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			to_user_rank = #{toUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			upgraded_time = #{upgradedTime},
		</set>
		where id = #{id}
	</update>

	<update id="merge">
		update `usr_merge_user_upgrade`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'userId'">user_id = #{mergeUserUpgrade.userId},</when>
					<when test="field == 'fromUserRank'">from_user_rank = #{mergeUserUpgrade.fromUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.usr.User$UserRank},</when>
					<when test="field == 'toUserRank'">to_user_rank = #{mergeUserUpgrade.toUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.usr.User$UserRank},</when>
					<when test="field == 'upgradedTime'">upgraded_time = #{mergeUserUpgrade.upgradedTime},</when>
				</choose>
				</foreach>
			</set>
		where id = #{mergeUserUpgrade.id}
	</update>

	<select id="findOne" resultMap="baseResultMap">
		select
		<include refid="baseColumn"/>
		from `usr_merge_user_upgrade`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap" parameterType="com.zy.model.query.MergeUserUpgradeQueryModel">
		select
		<include refid="baseColumn"/>
		from `usr_merge_user_upgrade`
		<where>
			<if test="userIdEQ != null">
				and user_id = #{userIdEQ}
			</if>
			<if test="upgradedTimeLT != null">
				and upgraded_time &lt; #{upgradedTimeLT}
			</if>
			<if test="upgradedTimeGTE != null">
				and upgraded_time &gt;= #{upgradedTimeGTE}
			</if>
		</where>
		<choose>
			<when test="orderByAndDirection != null">
				order by ${orderByAndDirection}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>

	<select id="count" resultType="_long" parameterType="com.zy.model.query.MergeUserUpgradeQueryModel">
		select count(*) from `usr_merge_user_upgrade`
		<where>
			<if test="userIdEQ != null">
				and user_id = #{userIdEQ}
			</if>
			<if test="upgradedTimeLT != null">
				and upgraded_time &lt; #{upgradedTimeLT}
			</if>
			<if test="upgradedTimeGTE != null">
				and upgraded_time &gt;= #{upgradedTimeGTE}
			</if>
		</where>
	</select>

</mapper>