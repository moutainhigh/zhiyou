<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.PortraitMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.usr.Portrait">
		<id column="id" property="id" />
		<result column="user_id" property="userId" />
		<result column="gender" property="gender" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="birthday" property="birthday" />
		<result column="job_id" property="jobId" />
		<result column="area_id" property="areaId" />
		<result column="hometown_area_id" property="hometownAreaId" />
		<result column="consumption_level" property="consumptionLevel" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="tag_ids" property="tagIds" />
	</resultMap>

	<insert id="insert" parameterType="com.zy.entity.usr.Portrait" useGeneratedKeys="true" keyProperty="id">
	  insert into `usr_portrait` (user_id,gender,birthday,job_id,area_id,hometown_area_id,consumption_level,tag_ids)
	  values (#{userId},#{gender,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{birthday},#{jobId},#{areaId},#{hometownAreaId},#{consumptionLevel,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{tagIds})
	</insert>

	<delete id="delete">
		delete from `usr_portrait` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.usr.Portrait">
		update `usr_portrait`
		<set>
			user_id = #{userId},
			gender = #{gender,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			birthday = #{birthday},
			job_id = #{jobId},
			area_id = #{areaId},
			hometown_area_id = #{hometownAreaId},
			consumption_level = #{consumptionLevel,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			tag_ids = #{tagIds},
		</set>
		where id = #{id}
	</update>

	<update id="merge">
		update `usr_portrait`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'userId'">user_id = #{portrait.userId},</when>
					<when test="field == 'gender'">gender = #{portrait.gender,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.usr.Portrait$Gender},</when>
					<when test="field == 'birthday'">birthday = #{portrait.birthday},</when>
					<when test="field == 'jobId'">job_id = #{portrait.jobId},</when>
					<when test="field == 'areaId'">area_id = #{portrait.areaId},</when>
					<when test="field == 'hometownAreaId'">hometown_area_id = #{portrait.hometownAreaId},</when>
					<when test="field == 'consumptionLevel'">consumption_level = #{portrait.consumptionLevel,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.usr.Portrait$ConsumptionLevel},</when>
					<when test="field == 'tagIds'">tag_ids = #{portrait.tagIds},</when>
				</choose>
				</foreach>
			</set>
		where id = #{portrait.id}
	</update>

	<select id="findOne" resultMap="baseResultMap" parameterType="long">
		select
		id,user_id,gender,birthday,job_id,area_id,hometown_area_id,consumption_level,tag_ids
		from `usr_portrait`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap" parameterType="com.zy.model.query.PortraitQueryModel">
		select
		id,user_id,gender,birthday,job_id,area_id,hometown_area_id,consumption_level,tag_ids
		from `usr_portrait`
		<where>
			<if test="userIdEQ != null">
				 and user_id = #{userIdEQ}
			</if>
			<if test="userIdIN != null">
				 and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
		</where>
		<choose>
			<when test="orderByAndDirection != null">
				order by ${orderByAndDirection}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>

	<select id="count" resultType="_long" parameterType="com.zy.model.query.PortraitQueryModel">
		select count(*) from `usr_portrait`
		<where>
			<if test="userIdEQ != null">
				 and user_id = #{userIdEQ}
			</if>
			<if test="userIdIN != null">
				 and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
		</where>
	</select>

	<select id="findByUserId" resultMap="baseResultMap" parameterType="long">
		select
		*
		from `usr_portrait`
		where user_id = #{userId}
	</select>

</mapper>