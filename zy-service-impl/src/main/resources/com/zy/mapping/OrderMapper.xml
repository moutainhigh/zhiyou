<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.OrderMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.mal.Order">
		<id column="id" property="id" />
		<result column="sn" property="sn" />
		<result column="user_id" property="userId" />
		<result column="buyer_user_rank" property="buyerUserRank" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="seller_id" property="sellerId" />
		<result column="seller_user_rank" property="sellerUserRank" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="root_id" property="rootId" />
		<result column="v4_user_id" property="v4UserId" />
		<result column="is_pay_to_platform" property="isPayToPlatform" />
		<result column="title" property="title" />
		<result column="created_time" property="createdTime" />
		<result column="expired_time" property="expiredTime" />
		<result column="paid_time" property="paidTime" />
		<result column="refunded_time" property="refundedTime" />
		<result column="order_status" property="orderStatus" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="order_type" property="orderType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="discount_fee" property="discountFee" />
		<result column="amount" property="amount" />
		<result column="refund" property="refund" />
		<result column="refund_remark" property="refundRemark" />
		<result column="buyer_memo" property="buyerMemo" />
		<result column="seller_memo" property="sellerMemo" />
		<result column="remark" property="remark" />
		<result column="is_profit_settled_up" property="isProfitSettledUp" />
		<result column="is_settled_up" property="isSettledUp" />
		<result column="is_copied" property="isCopied" />
		<result column="copied_time" property="copiedTime" />
		<result column="ref_id" property="refId" />
		<result column="delivered_time" property="deliveredTime" />
		<result column="is_use_logistics" property="isUseLogistics" />
		<result column="logistics_name" property="logisticsName" />
		<result column="logistics_sn" property="logisticsSn" />
		<result column="logistics_fee" property="logisticsFee" />
		<result column="is_buyer_pay_logistics_fee" property="isBuyerPayLogisticsFee" />
		<result column="receiver_area_id" property="receiverAreaId" />
		<result column="receiver_realname" property="receiverRealname" />
		<result column="receiver_phone" property="receiverPhone" />
		<result column="receiver_province" property="receiverProvince" />
		<result column="receiver_city" property="receiverCity" />
		<result column="receiver_district" property="receiverDistrict" />
		<result column="receiver_address" property="receiverAddress" />
		<result column="offline_image" property="offlineImage" />
		<result column="offline_memo" property="offlineMemo" />
		<result column="is_deleted" property="isDeleted" />
		<result column="is_multiple" property="isMultiple" />
		<result column="product_id" property="productId" />
		<result column="image" property="image" />
		<result column="market_price" property="marketPrice" />
		<result column="price" property="price" />
		<result column="quantity" property="quantity" />
		<result column="is_settlement" property="isSettlement" />
		<result column="version" property="version" />
	</resultMap>

	<insert id="insert" parameterType="com.zy.entity.mal.Order" useGeneratedKeys="true" keyProperty="id">
	  insert into `mal_order` (sn,user_id,buyer_user_rank,seller_id,seller_user_rank,root_id,v4_user_id,is_pay_to_platform,title,created_time,expired_time,paid_time,refunded_time,order_status,order_type,discount_fee,amount,refund,refund_remark,buyer_memo,seller_memo,remark,is_profit_settled_up,is_settled_up,is_copied,copied_time,ref_id,delivered_time,is_use_logistics,logistics_name,logistics_sn,logistics_fee,is_buyer_pay_logistics_fee,receiver_area_id,receiver_realname,receiver_phone,receiver_province,receiver_city,receiver_district,receiver_address,offline_image,offline_memo,is_deleted,is_multiple,product_id,image,market_price,price,quantity,is_settlement,version)
	  values (#{sn},#{userId},#{buyerUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{sellerId},#{sellerUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{rootId},#{v4UserId},#{isPayToPlatform},#{title},#{createdTime},#{expiredTime},#{paidTime},#{refundedTime},#{orderStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{orderType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{discountFee},#{amount},#{refund},#{refundRemark},#{buyerMemo},#{sellerMemo},#{remark},#{isProfitSettledUp},#{isSettledUp},#{isCopied},#{copiedTime},#{refId},#{deliveredTime},#{isUseLogistics},#{logisticsName},#{logisticsSn},#{logisticsFee},#{isBuyerPayLogisticsFee},#{receiverAreaId},#{receiverRealname},#{receiverPhone},#{receiverProvince},#{receiverCity},#{receiverDistrict},#{receiverAddress},#{offlineImage},#{offlineMemo},#{isDeleted},#{isMultiple},#{productId},#{image},#{marketPrice},#{price},#{quantity},#{isSettlement},#{version})
	</insert>

	<delete id="delete">
		delete from `mal_order` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.mal.Order">
		update `mal_order`
		<set>
			sn = #{sn},
			user_id = #{userId},
			buyer_user_rank = #{buyerUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			seller_id = #{sellerId},
			seller_user_rank = #{sellerUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			root_id = #{rootId},
			v4_user_id = #{v4UserId},
			is_pay_to_platform = #{isPayToPlatform},
			title = #{title},
			created_time = #{createdTime},
			expired_time = #{expiredTime},
			paid_time = #{paidTime},
			refunded_time = #{refundedTime},
			order_status = #{orderStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			order_type = #{orderType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			discount_fee = #{discountFee},
			amount = #{amount},
			refund = #{refund},
			refund_remark = #{refundRemark},
			buyer_memo = #{buyerMemo},
			seller_memo = #{sellerMemo},
			remark = #{remark},
			is_profit_settled_up = #{isProfitSettledUp},
			is_settled_up = #{isSettledUp},
			is_copied = #{isCopied},
			copied_time = #{copiedTime},
			ref_id = #{refId},
			delivered_time = #{deliveredTime},
			is_use_logistics = #{isUseLogistics},
			logistics_name = #{logisticsName},
			logistics_sn = #{logisticsSn},
			logistics_fee = #{logisticsFee},
			is_buyer_pay_logistics_fee = #{isBuyerPayLogisticsFee},
			receiver_area_id = #{receiverAreaId},
			receiver_realname = #{receiverRealname},
			receiver_phone = #{receiverPhone},
			receiver_province = #{receiverProvince},
			receiver_city = #{receiverCity},
			receiver_district = #{receiverDistrict},
			receiver_address = #{receiverAddress},
			offline_image = #{offlineImage},
			offline_memo = #{offlineMemo},
			is_deleted = #{isDeleted},
			is_multiple = #{isMultiple},
			product_id = #{productId},
			image = #{image},
			market_price = #{marketPrice},
			price = #{price},
			quantity = #{quantity},
			is_settlement = #{isSettlement},
			version = version + 1,
		</set>
		where id = #{id} and version=#{version}
	</update>

	<update id="merge">
		update `mal_order`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'sn'">sn = #{order.sn},</when>
					<when test="field == 'userId'">user_id = #{order.userId},</when>
					<when test="field == 'buyerUserRank'">buyer_user_rank = #{order.buyerUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.usr.User$UserRank},</when>
					<when test="field == 'sellerId'">seller_id = #{order.sellerId},</when>
					<when test="field == 'sellerUserRank'">seller_user_rank = #{order.sellerUserRank,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.usr.User$UserRank},</when>
					<when test="field == 'rootId'">root_id = #{order.rootId},</when>
					<when test="field == 'v4UserId'">v4_user_id = #{order.v4UserId},</when>
					<when test="field == 'isPayToPlatform'">is_pay_to_platform = #{order.isPayToPlatform},</when>
					<when test="field == 'title'">title = #{order.title},</when>
					<when test="field == 'createdTime'">created_time = #{order.createdTime},</when>
					<when test="field == 'expiredTime'">expired_time = #{order.expiredTime},</when>
					<when test="field == 'paidTime'">paid_time = #{order.paidTime},</when>
					<when test="field == 'refundedTime'">refunded_time = #{order.refundedTime},</when>
					<when test="field == 'orderStatus'">order_status = #{order.orderStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.mal.Order$OrderStatus},</when>
					<when test="field == 'orderType'">order_type = #{order.orderType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.mal.Order$OrderType},</when>
					<when test="field == 'discountFee'">discount_fee = #{order.discountFee},</when>
					<when test="field == 'amount'">amount = #{order.amount},</when>
					<when test="field == 'refund'">refund = #{order.refund},</when>
					<when test="field == 'refundRemark'">refund_remark = #{order.refundRemark},</when>
					<when test="field == 'buyerMemo'">buyer_memo = #{order.buyerMemo},</when>
					<when test="field == 'sellerMemo'">seller_memo = #{order.sellerMemo},</when>
					<when test="field == 'remark'">remark = #{order.remark},</when>
					<when test="field == 'isProfitSettledUp'">is_profit_settled_up = #{order.isProfitSettledUp},</when>
					<when test="field == 'isSettledUp'">is_settled_up = #{order.isSettledUp},</when>
					<when test="field == 'isCopied'">is_copied = #{order.isCopied},</when>
					<when test="field == 'copiedTime'">copied_time = #{order.copiedTime},</when>
					<when test="field == 'refId'">ref_id = #{order.refId},</when>
					<when test="field == 'deliveredTime'">delivered_time = #{order.deliveredTime},</when>
					<when test="field == 'isUseLogistics'">is_use_logistics = #{order.isUseLogistics},</when>
					<when test="field == 'logisticsName'">logistics_name = #{order.logisticsName},</when>
					<when test="field == 'logisticsSn'">logistics_sn = #{order.logisticsSn},</when>
					<when test="field == 'logisticsFee'">logistics_fee = #{order.logisticsFee},</when>
					<when test="field == 'isBuyerPayLogisticsFee'">is_buyer_pay_logistics_fee = #{order.isBuyerPayLogisticsFee},</when>
					<when test="field == 'receiverAreaId'">receiver_area_id = #{order.receiverAreaId},</when>
					<when test="field == 'receiverRealname'">receiver_realname = #{order.receiverRealname},</when>
					<when test="field == 'receiverPhone'">receiver_phone = #{order.receiverPhone},</when>
					<when test="field == 'receiverProvince'">receiver_province = #{order.receiverProvince},</when>
					<when test="field == 'receiverCity'">receiver_city = #{order.receiverCity},</when>
					<when test="field == 'receiverDistrict'">receiver_district = #{order.receiverDistrict},</when>
					<when test="field == 'receiverAddress'">receiver_address = #{order.receiverAddress},</when>
					<when test="field == 'offlineImage'">offline_image = #{order.offlineImage},</when>
					<when test="field == 'offlineMemo'">offline_memo = #{order.offlineMemo},</when>
					<when test="field == 'isDeleted'">is_deleted = #{order.isDeleted},</when>
					<when test="field == 'isMultiple'">is_multiple = #{order.isMultiple},</when>
					<when test="field == 'productId'">product_id = #{order.productId},</when>
					<when test="field == 'image'">image = #{order.image},</when>
					<when test="field == 'marketPrice'">market_price = #{order.marketPrice},</when>
					<when test="field == 'price'">price = #{order.price},</when>
					<when test="field == 'quantity'">quantity = #{order.quantity},</when>
					<when test="field == 'isSettlement'">is_settlement = #{order.isSettlement},</when>
				</choose>
				</foreach>
			</set>
		where id = #{order.id}
	</update>

	<select id="findOne" resultMap="baseResultMap" parameterType="long">
		select
		id,sn,user_id,buyer_user_rank,seller_id,seller_user_rank,root_id,v4_user_id,is_pay_to_platform,title,created_time,expired_time,paid_time,refunded_time,order_status,order_type,discount_fee,amount,refund,refund_remark,buyer_memo,seller_memo,remark,is_profit_settled_up,is_settled_up,is_copied,copied_time,ref_id,delivered_time,is_use_logistics,logistics_name,logistics_sn,logistics_fee,is_buyer_pay_logistics_fee,receiver_area_id,receiver_realname,receiver_phone,receiver_province,receiver_city,receiver_district,receiver_address,offline_image,offline_memo,is_deleted,is_multiple,product_id,image,market_price,price,quantity,is_settlement,version
		from `mal_order`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap" parameterType="com.zy.model.query.OrderQueryModel">
		select
		id,sn,user_id,buyer_user_rank,seller_id,seller_user_rank,root_id,v4_user_id,is_pay_to_platform,title,created_time,expired_time,paid_time,refunded_time,order_status,order_type,discount_fee,amount,refund,refund_remark,buyer_memo,seller_memo,remark,is_profit_settled_up,is_settled_up,is_copied,copied_time,ref_id,delivered_time,is_use_logistics,logistics_name,logistics_sn,logistics_fee,is_buyer_pay_logistics_fee,receiver_area_id,receiver_realname,receiver_phone,receiver_province,receiver_city,receiver_district,receiver_address,offline_image,offline_memo,is_deleted,is_multiple,product_id,image,market_price,price,quantity,is_settlement,version
		from `mal_order`
		<where>
			<if test="rootIdEQ != null">
				and root_id = #{rootIdEQ}
			</if>
			<if test="titleLK != null">
				<bind name="titleLK" value="'%' + titleLK + '%'"/> and title like #{titleLK}
			</if>
			<if test="productIdEQ != null">
				and product_id = #{productIdEQ}
			</if>
			<if test="sellerIdEQ != null">
				and seller_id = #{sellerIdEQ}
			</if>
			<if test="paidTimeGTE != null">
				and paid_time &gt;= #{paidTimeGTE}
			</if>
			<if test="isSettledUpEQ != null">
				and is_settled_up = #{isSettledUpEQ}
			</if>
			<if test="isCopiedEQ != null">
				and is_copied = #{isCopiedEQ}
			</if>
			<if test="receiverRealnameEQ != null">
				and receiver_realname = #{receiverRealnameEQ}
			</if>
			<if test="isSettlementEQ != null">
				and is_settlement = #{isSettlementEQ}
			</if>
			<if test="logisticsSnLK != null">
				<bind name="logisticsSnLK" value="'%' + logisticsSnLK + '%'"/> and logistics_sn like #{logisticsSnLK}
			</if>
			<if test="isDeletedEQ != null">
				and is_deleted = #{isDeletedEQ}
			</if>
			<if test="v4UserIdEQ != null">
				and v4_user_id = #{v4UserIdEQ}
			</if>
			<if test="expiredTimeGTE != null">
				and expired_time &gt;= #{expiredTimeGTE}
			</if>
			<if test="orderStatusEQ != null">
				and order_status = #{orderStatusEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="userIdEQ != null">
				and user_id = #{userIdEQ}
			</if>
			<if test="paidTimeLT != null">
				and paid_time &lt; #{paidTimeLT}
			</if>
			<if test="orderStatusIN != null">
				<if test="orderStatusIN.length != 0">
				and order_status in
				<foreach collection="orderStatusIN" item="item" open="(" separator="," close=")">
				#{item,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
				</foreach>
				</if>
				<if test="orderStatusIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="snLK != null">
				<bind name="snLK" value="'%' + snLK + '%'"/> and sn like #{snLK}
			</if>
			<if test="expiredTimeLT != null">
				and expired_time &lt; #{expiredTimeLT}
			</if>
			<if test="createdTimeLT != null">
				and created_time &lt; #{createdTimeLT}
			</if>
			<if test="userIdIN != null">
				<if test="userIdIN.length != 0">
				and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="userIdIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="isProfitSettledUpEQ != null">
				and is_profit_settled_up = #{isProfitSettledUpEQ}
			</if>
			<if test="logisticsNameLK != null">
				<bind name="logisticsNameLK" value="'%' + logisticsNameLK + '%'"/> and logistics_name like #{logisticsNameLK}
			</if>
			<if test="receiverPhoneEQ != null">
				and receiver_phone = #{receiverPhoneEQ}
			</if>
			<if test="createdTimeGTE != null">
				and created_time &gt;= #{createdTimeGTE}
			</if>
			<if test="isPayToPlatformEQ != null">
				and is_pay_to_platform = #{isPayToPlatformEQ}
			</if>
			<if test="orderTypeEQ != null">
				and order_type = #{orderTypeEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="sellerIdIN != null">
				<if test="sellerIdIN.length != 0">
				and seller_id in
				<foreach collection="sellerIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="sellerIdIN.length == 0">
				and 1 = 2
				</if>
			</if>
		</where>
		<choose>
			<when test="orderByAndDirection != null">
				order by ${orderByAndDirection}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>

	<select id="count" resultType="_long" parameterType="com.zy.model.query.OrderQueryModel">
		select count(*) from `mal_order`
		<where>
			<if test="rootIdEQ != null">
				and root_id = #{rootIdEQ}
			</if>
			<if test="titleLK != null">
				<bind name="titleLK" value="'%' + titleLK + '%'"/> and title like #{titleLK}
			</if>
			<if test="productIdEQ != null">
				and product_id = #{productIdEQ}
			</if>
			<if test="sellerIdEQ != null">
				and seller_id = #{sellerIdEQ}
			</if>
			<if test="paidTimeGTE != null">
				and paid_time &gt;= #{paidTimeGTE}
			</if>
			<if test="isSettledUpEQ != null">
				and is_settled_up = #{isSettledUpEQ}
			</if>
			<if test="isCopiedEQ != null">
				and is_copied = #{isCopiedEQ}
			</if>
			<if test="receiverRealnameEQ != null">
				and receiver_realname = #{receiverRealnameEQ}
			</if>
			<if test="isSettlementEQ != null">
				and is_settlement = #{isSettlementEQ}
			</if>
			<if test="logisticsSnLK != null">
				<bind name="logisticsSnLK" value="'%' + logisticsSnLK + '%'"/> and logistics_sn like #{logisticsSnLK}
			</if>
			<if test="isDeletedEQ != null">
				and is_deleted = #{isDeletedEQ}
			</if>
			<if test="v4UserIdEQ != null">
				and v4_user_id = #{v4UserIdEQ}
			</if>
			<if test="expiredTimeGTE != null">
				and expired_time &gt;= #{expiredTimeGTE}
			</if>
			<if test="orderStatusEQ != null">
				and order_status = #{orderStatusEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="userIdEQ != null">
				and user_id = #{userIdEQ}
			</if>
			<if test="paidTimeLT != null">
				and paid_time &lt; #{paidTimeLT}
			</if>
			<if test="orderStatusIN != null">
				<if test="orderStatusIN.length != 0">
				and order_status in
				<foreach collection="orderStatusIN" item="item" open="(" separator="," close=")">
				#{item,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
				</foreach>
				</if>
				<if test="orderStatusIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="snLK != null">
				<bind name="snLK" value="'%' + snLK + '%'"/> and sn like #{snLK}
			</if>
			<if test="expiredTimeLT != null">
				and expired_time &lt; #{expiredTimeLT}
			</if>
			<if test="createdTimeLT != null">
				and created_time &lt; #{createdTimeLT}
			</if>
			<if test="userIdIN != null">
				<if test="userIdIN.length != 0">
				and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="userIdIN.length == 0">
				and 1 = 2
				</if>
			</if>
			<if test="isProfitSettledUpEQ != null">
				and is_profit_settled_up = #{isProfitSettledUpEQ}
			</if>
			<if test="logisticsNameLK != null">
				<bind name="logisticsNameLK" value="'%' + logisticsNameLK + '%'"/> and logistics_name like #{logisticsNameLK}
			</if>
			<if test="receiverPhoneEQ != null">
				and receiver_phone = #{receiverPhoneEQ}
			</if>
			<if test="createdTimeGTE != null">
				and created_time &gt;= #{createdTimeGTE}
			</if>
			<if test="isPayToPlatformEQ != null">
				and is_pay_to_platform = #{isPayToPlatformEQ}
			</if>
			<if test="orderTypeEQ != null">
				and order_type = #{orderTypeEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="sellerIdIN != null">
				<if test="sellerIdIN.length != 0">
				and seller_id in
				<foreach collection="sellerIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
				</if>
				<if test="sellerIdIN.length == 0">
				and 1 = 2
				</if>
			</if>
		</where>
	</select>

	<sql id="baseColumn">id,sn,user_id,buyer_user_rank,seller_id,seller_user_rank,root_id,v4_user_id,is_pay_to_platform,title,created_time,expired_time,paid_time,refunded_time,order_status,order_type,discount_fee,amount,refund,refund_remark,buyer_memo,seller_memo,remark,is_profit_settled_up,is_settled_up,is_copied,copied_time,ref_id,delivered_time,is_use_logistics,logistics_name,logistics_sn,logistics_fee,is_buyer_pay_logistics_fee,receiver_area_id,receiver_realname,receiver_phone,receiver_province,receiver_city,receiver_district,receiver_address,offline_image,offline_memo,is_deleted,is_multiple,product_id,image,market_price,price,quantity,version</sql>

	<select id="findBySn" resultMap="baseResultMap">
		select
		*
		from `mal_order`
		where sn = #{sn}
	</select>

	<resultMap id="sumResultMap" type="com.zy.model.dto.OrderSumDto">
		<result column="count_number" property="countNumber"/>
		<result column="quantity" property="sumQuantity"/>
		<result column="amount" property="sumAmount"/>
	</resultMap>

	<select id="orderSum" resultMap="sumResultMap" parameterType="com.zy.model.query.OrderQueryModel">
		select count(id) countNumber, sum(quantity) quantity, sum(amount) amount 
		from mal_order_item where order_id in 
		(select id from mal_order
		<where>
			<if test="isDeletedEQ != null">
				and is_deleted = #{isDeletedEQ}
			</if>
			<if test="rootIdEQ != null">
				and root_id = #{rootIdEQ}
			</if>
			<if test="v4UserIdEQ != null">
				and v4_user_id = #{v4UserIdEQ}
			</if>
			<if test="titleLK != null">
				<bind name="titleLK" value="'%' + titleLK + '%'"/> and title like #{titleLK}
			</if>
			<if test="orderStatusEQ != null">
				and order_status = #{orderStatusEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="sellerIdEQ != null">
				and seller_id = #{sellerIdEQ}
			</if>
			<if test="userIdEQ != null">
				and user_id = #{userIdEQ}
			</if>
			<if test="paidTimeLT != null">
				and paid_time &lt; #{paidTimeLT}
			</if>
			<if test="orderStatusIN != null">
				<if test="orderStatusIN.length != 0">
					and order_status in
					<foreach collection="orderStatusIN" item="item" open="(" separator="," close=")">
						#{item,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
					</foreach>
				</if>
				<if test="orderStatusIN.length == 0">
					1 = 2
				</if>
			</if>
			<if test="snLK != null">
				<bind name="snLK" value="'%' + snLK + '%'"/> and sn like #{snLK}
			</if>
			<if test="paidTimeGTE != null">
				and paid_time &gt;= #{paidTimeGTE}
			</if>
			<if test="isSettledUpEQ != null">
				and is_settled_up = #{isSettledUpEQ}
			</if>
			<if test="isCopiedEQ != null">
				and is_copied = #{isCopiedEQ}
			</if>
			<if test="createdTimeLT != null">
				and created_time &lt; #{createdTimeLT}
			</if>
			<if test="userIdIN != null">
				<if test="userIdIN.length != 0">
					and user_id in
					<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test="userIdIN.length == 0">
					1 = 2
				</if>
			</if>
			<if test="isProfitSettledUpEQ != null">
				and is_profit_settled_up = #{isProfitSettledUpEQ}
			</if>
			<if test="logisticsNameLK != null">
				<bind name="logisticsNameLK" value="'%' + logisticsNameLK + '%'"/> and logistics_name like #{logisticsNameLK}
			</if>
			<if test="createdTimeGTE != null">
				and created_time &gt;= #{createdTimeGTE}
			</if>
			<if test="logisticsSnLK != null">
				<bind name="logisticsSnLK" value="'%' + logisticsSnLK + '%'"/> and logistics_sn like #{logisticsSnLK}
			</if>
			<if test="isPayToPlatformEQ != null">
				and is_pay_to_platform = #{isPayToPlatformEQ}
			</if>
			<if test="sellerIdIN != null">
				<if test="sellerIdIN.length != 0">
					and seller_id in
					<foreach collection="sellerIdIN" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
				<if test="sellerIdIN.length == 0">
					1 = 2
				</if>
			</if>
		</where>
		)
	</select>

	<select id="queryRetailPurchases" resultType="_long" parameterType="com.zy.model.query.OrderQueryModel">
		SELECT IFNULL(SUM(a.quantity), 0)
		FROM mal_order a
		<where>
			1 = 1
			AND a.order_status IN (3,4,5)
			<if test="userIdEQ != null">
				AND a.user_id = #{userIdEQ}
			</if>
			<if test="userIdList != null">
				<if test="userIdList.size &gt; 0">
					AND a.user_id IN
					<foreach collection="userIdList" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
			</if>
			<if test="paidTimeGTE != null">
				AND a.paid_time &gt;= #{paidTimeGTE}
			</if>
			<if test="paidTimeLT != null">
				AND a.paid_time &lt; #{paidTimeLT}
			</if>
		</where>
	</select>

	<select id="queryShipment" resultType="_long" parameterType="com.zy.model.query.OrderQueryModel">
		SELECT IFNULL(SUM(a.quantity), 0)
		FROM mal_order a
		<where>
			1 = 1
			AND a.order_status IN (3,4,5)
			<if test="sellerIdEQ != null">
				AND a.seller_id = #{sellerIdEQ}
			</if>
			<if test="sellerIdList != null">
				<if test="sellerIdList.size &gt; 0">
					AND a.seller_id IN
					<foreach collection="sellerIdList" item="item" open="(" separator="," close=")">
						#{item}
					</foreach>
				</if>
			</if>
			<if test="paidTimeGTE != null">
				AND a.paid_time &gt;= #{paidTimeGTE}
			</if>
			<if test="paidTimeLT != null">
				AND a.paid_time &lt; #{paidTimeLT}
			</if>
		</where>
	</select>

</mapper>