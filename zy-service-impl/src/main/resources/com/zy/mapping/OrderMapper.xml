<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zy.mapper.OrderMapper" >

	<resultMap id="baseResultMap" type="com.zy.entity.mal.Order">
		<id column="id" property="id" />
		<result column="sn" property="sn" />
		<result column="user_id" property="userId" />
		<result column="seller_id" property="sellerId" />
		<result column="title" property="title" />
		<result column="created_time" property="createdTime" />
		<result column="expired_time" property="expiredTime" />
		<result column="paid_time" property="paidTime" />
		<result column="refunded_time" property="refundedTime" />
		<result column="currency_type" property="currencyType" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="order_status" property="orderStatus" typeHandler="org.apache.ibatis.type.EnumOrdinalTypeHandler" />
		<result column="post_fee" property="postFee" />
		<result column="discount_fee" property="discountFee" />
		<result column="amount" property="amount" />
		<result column="refund" property="refund" />
		<result column="refund_remark" property="refundRemark" />
		<result column="remark" property="remark" />
		<result column="is_settled_up" property="isSettledUp" />
		<result column="version" property="version" />
	</resultMap>

	<insert id="insert" parameterType="com.zy.entity.mal.Order" useGeneratedKeys="true" keyProperty="id">
	  insert into `mal_order` (sn,user_id,seller_id,title,created_time,expired_time,paid_time,refunded_time,currency_type,order_status,post_fee,discount_fee,amount,refund,refund_remark,remark,is_settled_up,version)
	  values (#{sn},#{userId},#{sellerId},#{title},#{createdTime},#{expiredTime},#{paidTime},#{refundedTime},#{currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{orderStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},#{postFee},#{discountFee},#{amount},#{refund},#{refundRemark},#{remark},#{isSettledUp},#{version})
	</insert>

	<delete id="delete">
		delete from `mal_order` where id = #{id}
	</delete>

	<update id="update" parameterType="com.zy.entity.mal.Order">
		update `mal_order`
		<set>
			sn = #{sn},
			user_id = #{userId},
			seller_id = #{sellerId},
			title = #{title},
			created_time = #{createdTime},
			expired_time = #{expiredTime},
			paid_time = #{paidTime},
			refunded_time = #{refundedTime},
			currency_type = #{currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			order_status = #{orderStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler},
			post_fee = #{postFee},
			discount_fee = #{discountFee},
			amount = #{amount},
			refund = #{refund},
			refund_remark = #{refundRemark},
			remark = #{remark},
			is_settled_up = #{isSettledUp},
			version = version + 1,
		</set>
		where id = #{id} and version=#{version}
	</update>

	<update id="merge">
		update `mal_order`
			<set>
				<foreach collection="fields" item="field">
				<choose>
					<when test="field == 'sn'">sn = #{order.sn},</when>
					<when test="field == 'userId'">user_id = #{order.userId},</when>
					<when test="field == 'sellerId'">seller_id = #{order.sellerId},</when>
					<when test="field == 'title'">title = #{order.title},</when>
					<when test="field == 'createdTime'">created_time = #{order.createdTime},</when>
					<when test="field == 'expiredTime'">expired_time = #{order.expiredTime},</when>
					<when test="field == 'paidTime'">paid_time = #{order.paidTime},</when>
					<when test="field == 'refundedTime'">refunded_time = #{order.refundedTime},</when>
					<when test="field == 'currencyType'">currency_type = #{order.currencyType,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.fnc.CurrencyType},</when>
					<when test="field == 'orderStatus'">order_status = #{order.orderStatus,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler,javaType=com.zy.entity.mal.Order$OrderStatus},</when>
					<when test="field == 'postFee'">post_fee = #{order.postFee},</when>
					<when test="field == 'discountFee'">discount_fee = #{order.discountFee},</when>
					<when test="field == 'amount'">amount = #{order.amount},</when>
					<when test="field == 'refund'">refund = #{order.refund},</when>
					<when test="field == 'refundRemark'">refund_remark = #{order.refundRemark},</when>
					<when test="field == 'remark'">remark = #{order.remark},</when>
					<when test="field == 'isSettledUp'">is_settled_up = #{order.isSettledUp},</when>
				</choose>
				</foreach>
			</set>
		where id = #{order.id}
	</update>

	<select id="findOne" resultMap="baseResultMap" parameterType="long">
		select
		id,sn,user_id,seller_id,title,created_time,expired_time,paid_time,refunded_time,currency_type,order_status,post_fee,discount_fee,amount,refund,refund_remark,remark,is_settled_up,version
		from `mal_order`
		where id = #{id}
	</select>

	<select id="findAll" resultMap="baseResultMap" parameterType="com.zy.model.query.OrderQueryModel">
		select
		id,sn,user_id,seller_id,title,created_time,expired_time,paid_time,refunded_time,currency_type,order_status,post_fee,discount_fee,amount,refund,refund_remark,remark,is_settled_up,version
		from `mal_order`
		<where>
			<if test="userIdIN != null">
				 and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
			<if test="orderStatusEQ != null">
				 and order_status = #{orderStatusEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="sellerIdEQ != null">
				 and seller_id = #{sellerIdEQ}
			</if>
			<if test="userIdEQ != null">
				 and user_id = #{userIdEQ}
			</if>
			<if test="snLK != null">
				<bind name="snLK" value="'%' + snLK + '%'"/> and sn like #{snLK}
			</if>
			<if test="sellerIdIN != null">
				 and seller_id in
				<foreach collection="sellerIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
		</where>
		<choose>
			<when test="orderByAndDirection != null">
				order by ${orderByAndDirection}
			</when>
			<otherwise>
				order by id desc
			</otherwise>
		</choose>
		<if test="offset != null">
			limit #{offset}, #{pageSize}
		</if>
	</select>

	<select id="count" resultType="_long" parameterType="com.zy.model.query.OrderQueryModel">
		select count(*) from `mal_order`
		<where>
			<if test="userIdIN != null">
				 and user_id in
				<foreach collection="userIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
			<if test="orderStatusEQ != null">
				 and order_status = #{orderStatusEQ,typeHandler=org.apache.ibatis.type.EnumOrdinalTypeHandler}
			</if>
			<if test="sellerIdEQ != null">
				 and seller_id = #{sellerIdEQ}
			</if>
			<if test="userIdEQ != null">
				 and user_id = #{userIdEQ}
			</if>
			<if test="snLK != null">
				<bind name="snLK" value="'%' + snLK + '%'"/> and sn like #{snLK}
			</if>
			<if test="sellerIdIN != null">
				 and seller_id in
				<foreach collection="sellerIdIN" item="item" open="(" separator="," close=")">
				#{item}
				</foreach>
			</if>
		</where>
	</select>

</mapper>